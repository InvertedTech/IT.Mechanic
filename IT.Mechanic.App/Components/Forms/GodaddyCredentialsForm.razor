@namespace IT.Mechanic.App.Components.Forms
@using IT.Mechanic.App.Services.Settings
@using IT.Mechanic.App.Validators.Credentials
@using IT.Mechanic.Models.Configuration.Credentials

<MudCard Elevation="20">
    <MudCardHeader>
        <MudText Typo="Typo.h4">GoDaddy Credentials</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudForm @ref="@_form" Validation="@Validator">
            <MudTextField @bind-Value="CredentialName" Label="Credential Name" Required="true" RequiredError="Required" />
            <MudTextField @bind-Value="ApiKey" Label="Api Key" Required="true" RequiredError="Required" />
            <MudTextField @bind-Value="ApiSecret" Label="Api Secret" Required="true" RequiredError="Required" />
        </MudForm>
    </MudCardContent>
    <MudCardActions>
            <MudButton StartIcon="@ButtonIcon" Variant="Variant.Filled" Color="@ButtonColor" @onclick="OnSave">
                <MudText Typo="Typo.button">@ButtonText</MudText>
            </MudButton>
        </MudCardActions>
</MudCard>

    @code {
    [Parameter] public ICredentialService Credentials { get; set; }
    public string CredentialName { get; set; } = string.Empty;
    public string ApiKey { get; set; } = string.Empty;
    public string ApiSecret { get; set; } = string.Empty;
    public bool IsSuccess { get; set; } = false;
    public string ButtonIcon => IsSuccess ? @Icons.Material.Filled.Check : Icons.Material.Filled.Save;
    public Color ButtonColor => IsSuccess ? Color.Success : Color.Secondary;
    public string ButtonText => IsSuccess ? "Success" : "Save";
    private MudForm _form;
    private GodaddyCredentialValidator Validator = new GodaddyCredentialValidator();

    public async void OnSave()
    {
        if (Credentials == null)
        {
            throw new Exception("Credentials Is Null");
        }

        GodaddyModel model = new GodaddyModel()
            {
                ApiKey = ApiKey,
                ApiSecret = ApiSecret
            };
        if (
        _form.IsValid)
        {
            await Credentials.AddGodaddyCredentialAsync(CredentialName, model);
            IsSuccess = true;
            StateHasChanged();
        } 
        // else
        // {
        //     // Display Errors
        // }
    }
}
