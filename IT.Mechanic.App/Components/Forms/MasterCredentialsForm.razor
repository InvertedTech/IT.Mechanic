@namespace IT.Mechanic.App.Components.Forms
@using IT.Mechanic.App.Services.Settings
@using IT.Mechanic.Models.Configuration.Credentials

<MudCard Elevation="20">
    <MudCardHeader>
        <MudText Typo="Typo.h4">Master Credentials</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="CredentialName" Label="Credential Name" Required="true" RequiredError="Required" />
        <MudTextField @bind-Value="MasterKey" Label="Master Key" Required="true" RequiredError="Required" />
    </MudCardContent>
    <MudCardActions>
        <MudButton StartIcon="@ButtonIcon" Variant="Variant.Filled" Color="@ButtonColor" @onclick="OnSave">
            <MudText Typo="Typo.button">@ButtonText</MudText>
            </MudButton>
        </MudCardActions>
    </MudCard>

    @code {
    [Parameter] public ICredentialService Credentials { get; set; }
    public string CredentialName { get; set; } = string.Empty;
    public string MasterKey { get; set; } = string.Empty;
    public bool IsSuccess { get; set; } = false;
    public string ButtonIcon => IsSuccess ? @Icons.Material.Filled.Check : Icons.Material.Filled.Save;
    public Color ButtonColor => IsSuccess ? Color.Success : Color.Secondary;
    public string ButtonText => IsSuccess ? "Success" : "Save";

    public async void OnSave()
    {
        if (Credentials == null)
        {
            throw new Exception("Credentials Is Null");
        }

        MasterModel model = new MasterModel()
            {
                MasterKey = MasterKey
            };

        await Credentials.AddCredentialAsync(CredentialName, Helpers.CredentialHelpers.CredentialTypes.Master, model);
        IsSuccess = true;
        StateHasChanged();
    }
}
