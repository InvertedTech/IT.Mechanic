@namespace IT.Mechanic.App.Components.Data.Credentials
@using IT.Mechanic.App.Components.Forms
@using IT.Mechanic.App.Services.Settings
@using IT.Mechanic.Models.Configuration.App
@using IT.Mechanic.Models.Configuration.Credentials
@using static IT.Mechanic.App.Helpers.CredentialHelpers

<MudTabPanel Text="@CredentialType.ToString()">
    @if (CredentialService.CredentialsState.AWSCredentials.Count > 0)
    {
        <MudExpansionPanels>
            @foreach (var credential in CredentialService.CredentialsState.AWSCredentials)
            {
                <MudExpansionPanel Text="@credential.CredentialName">
                    <MudText Typo="Typo.body2">API Key: @credential.Credentials.ApiKey</MudText>
                    </MudExpansionPanel>
            }
        </MudExpansionPanels>
    }
    else
    {
        <MudText Typo="Typo.h5">Click Add New To Create Credentials</MudText>
    }
    <div class="mt-4">
        <MudButton Color="Color.Info" Variant="Variant.Filled" @onclick="OnAddClicked">Add New</MudButton>
    </div>
</MudTabPanel>

<MudMessageBox @ref="_messageBox">
    <MessageContent>
        <CredentialsForm CredentialService="CredentialService" CredentialType="Helpers.CredentialHelpers.CredentialTypes.AWS" />
    </MessageContent>
    <CancelButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined">Close</MudButton>
    </CancelButton>
</MudMessageBox>

@code {
    [Parameter]
    public ICredentialService CredentialService { get; set; }
    [Parameter]
    public CredentialTypes CredentialType { get; set; } = CredentialTypes.GoDaddy;

    private MudMessageBox _messageBox;

    private async Task OnAddClicked()
    {
        await _messageBox.ShowAsync();
    }
}
