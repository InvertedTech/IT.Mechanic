@using IT.Mechanic.App.Services.Settings

<MudTabPanel Text="InvertedTech">
    @if (CredentialService.CredentialsState.InvertedTechCredentials.Count() > 0)
    {
        <MudExpansionPanels>
            @foreach (var credential in CredentialService.CredentialsState.InvertedTechCredentials)
            {
                <MudExpansionPanel Text="@credential.CredentialName">
                    <MudText Typo="Typo.body2">API Key: @credential.Credentials.ApiKey</MudText>
                    </MudExpansionPanel>
            }
        </MudExpansionPanels>
    }
    else
    {
        <MudText Typo="Typo.h5">Click Add New To Create Credentials</MudText>
    }
    <div class="mt-4">
        <MudButton Color="Color.Info" Variant="Variant.Filled" @onclick="OnAddClicked">Add New</MudButton>
    </div>
</MudTabPanel>
<MudMessageBox @ref="_messageBox">
    <MessageContent>
        <InvertedTechCredentialsForm Credentials="CredentialService" />
    </MessageContent>
    <CancelButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined">Close</MudButton>
    </CancelButton>
</MudMessageBox>
@code {
    [Parameter]
    public ICredentialService CredentialService { get; set; }

    private MudMessageBox _messageBox;

    private async Task OnAddClicked()
    {
        await _messageBox.ShowAsync();
    }
}
