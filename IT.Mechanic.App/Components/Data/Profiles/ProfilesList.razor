@using IT.Mechanic.App.Services.Profiles
@using IT.Mechanic.Models.Configuration
@inject NavigationManager Navigation
@inject IProfileService _profileService

<MudPaper Width="300">
    <MudText Typo="Typo.h4">Recent Profiles:</MudText>
    @if (profiles.Any())
    {
        <MudList T="MainModel">
            @foreach (var profile in profiles)
            {
                <MudListItem @onclick="() => NavigateToProfile(profile.SiteId.ToString())">
                    <MudText Typo="Typo.h6">@profile.DNS.DomainName</MudText>
                </MudListItem>
                <MudDivider />
            }
        </MudList>
    }
    else
    {
        <MudText Typo="Typo.h5">Click Add Profile to Get Started!</MudText>
    }
    <MudButton Variant="Variant.Filled">Add Profile</MudButton>
</MudPaper>

@code {
    private IEnumerable<MainModel> profiles { get; set; } = new List<MainModel>();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        profiles = _profileService.Profiles;
    }

    private void NavigateToProfile(string profileId)
    {
        Navigation.NavigateTo($"/profiles/{profileId}");
    }
}
