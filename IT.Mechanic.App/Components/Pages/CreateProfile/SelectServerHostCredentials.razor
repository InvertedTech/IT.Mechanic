@using IT.Mechanic.App.Services.Profiles
@using IT.Mechanic.App.Services.Settings
@using IT.Mechanic.Models.Configuration
@using IT.Mechanic.Models.Configuration.App
@using IT.Mechanic.Models.Configuration.Credentials
@page "/create/select-server-host-credentials"
@inject IProfileFactory ProfileFactory;
@inject ICredentialService CredentialService;
@inject NavigationManager Navigation;

<MudText Typo="Typo.h4">Select Host Provider Credentials</MudText>
<MudButtonGroup Variant="Variant.Filled">
    <MudText Typo="Typo.h6">Select Host Provider Credentials For @Host</MudText>
    <MudButton Color="Color.Primary" @onclick="OnBackClicked">Back</MudButton>
    <MudButton Color="Color.Secondary" @onclick="OnNextClicked">Next</MudButton>
    @* @if (SelectedCredential != null)
    {
        <MudButton Color="Color.Secondary" @onclick="OnNextClicked">Next</MudButton>
    }
    else
    {
        <MudButton @onclick="OnCreateClicked" Color="Color.Secondary">Create New?</MudButton>
    } *@
</MudButtonGroup>

@code {
    [Parameter, SupplyParameterFromQuery(Name = "host")]
    public string Host { get; set; } = ServerModel.HostingProviderEnum.Rumble.ToString();

    public void OnBackClicked()
    {
        Navigation.NavigateTo("/select-server-host");
    }

    public void OnNextClicked()
    {
        Navigation.NavigateTo("/");
    }
}
