@using IT.Mechanic.App.Services.Profiles
@using IT.Mechanic.Models.Configuration
@page "/create/select-server-host"
@inject IProfileFactory ProfileFactory
@inject NavigationManager Navigation;

<MudText Typo="Typo.h4">Select Your Server Hosting Provider</MudText>
<MudPaper Width="300">
    <MudText Typo="Typo.h6">This Is Where You Will Host The Services</MudText>
    <MudSelect T="ServerModel.HostingProviderEnum" @bind-Value="SelectedHost">
        <MudSelectItem Value="ServerModel.HostingProviderEnum.Rumble" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.Digitalocean" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.Azure" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.AWS" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.GCP" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.Invertedtech" />
        <MudSelectItem Value="ServerModel.HostingProviderEnum.Expertmode" />
    </MudSelect>
    <MudButtonGroup Variant="Variant.Filled">
        <MudButton Color="Color.Primary" @onclick="OnBackClicked">Back</MudButton>
        <MudButton Color="Color.Secondary" @onclick="OnNextClicked">Next</MudButton>
    </MudButtonGroup>
</MudPaper>

@code {
    public ServerModel.HostingProviderEnum SelectedHost { get; set; }

    protected override void OnInitialized() {
        SelectedHost = ProfileFactory.Server.HostingProvider;
        base.OnInitialized();
    }

    public void OnBackClicked()
    {
        Navigation.NavigateTo("/create/select-dns-credentials");    
    }

    public void OnNextClicked()
    {
        Navigation.NavigateTo($"/create/select-server-host-credentials/{SelectedHost.ToString()}");
    }
}
