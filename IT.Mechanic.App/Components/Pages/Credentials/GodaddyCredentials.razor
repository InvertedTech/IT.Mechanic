@using IT.Mechanic.App.Services.Settings;
@using IT.Mechanic.Models.Configuration.Credentials
@page "/credentials/Godaddy"
@inject ICredentialService CredentialService
@inject NavigationManager Navigation
<MudPaper Width="75%" Class="ml-auto mr-auto">
    <MudCardHeader>
        <MudText Typo="Typo.h4">GoDaddy Credentials</MudText>
    </MudCardHeader>
    <MudCardContent>
        <MudTextField @bind-Value="CredentialName" Label="Credential Name" Required="true" RequiredError="Required" />
        <MudTextField @bind-Value="ApiKey" Label="Api Key" Required="true" RequiredError="Required" />
        <MudTextField @bind-Value="ApiSecret" Label="Api Secret" Required="true" RequiredError="Required" />
    </MudCardContent>
    <MudCardActions>
        <MudButtonGroup Variant="Variant.Filled">
            <MudButton Color="Color.Secondary" @onclick="OnBackClicked">Back</MudButton>
            @if (IsSuccess)
            {
                <MudButton Color="Color.Primary" @onclick="OnNextClicked">Next</MudButton>
            }
            else
            {
                <MudButton Color="Color.Primary" @onclick="OnSaveClickedAsync">Save</MudButton>
            }
        </MudButtonGroup>
    </MudCardActions>
</MudPaper>

@code {
    [Parameter, SupplyParameterFromQuery(Name = "redirect")]
    public string? Redirect { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "from")]
    public string? From { get; set; }

    public bool IsSuccess { get; set; } = false;
    public string CredentialName { get; set; } = "godaddy";
    public string ApiKey { get; set; } = string.Empty;
    public string ApiSecret { get; set; } = string.Empty;

    public async void OnSaveClickedAsync()
    {
        GodaddyModel model = new GodaddyModel()
        {
            ApiKey =  ApiKey,
            ApiSecret = ApiSecret
        };

        await CredentialService.AddGodaddyCredentialAsync(CredentialName, model);
        IsSuccess = true;
    }

    public void OnBackClicked()
    {
        if (!string.IsNullOrEmpty(From))
        {
            Navigation.NavigateTo(From);
        } else
        {
            Navigation.NavigateTo("/");
        }
    }

    public void OnNextClicked()
    {
        if (!string.IsNullOrEmpty(Redirect))
        {
            Navigation.NavigateTo(Redirect);
        } else
        {
            Navigation.NavigateTo("/");
        }
    }
}
