@page "/credentials/Azure"
@using IT.Mechanic.Models.Configuration.App
@using IT.Mechanic.Models.Configuration.Credentials
@using IT.Mechanic.App.Services.Settings;
@inject ICredentialService CredentialService;
@inject NavigationManager Navigation;

<MudPaper Width="75%" Class="ml-auto mr-auto">
    <MudCard Elevation="20" >
        <MudCardHeader>
            <MudText Typo="Typo.h4">Azure Credentials</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Name" @bind-Value="credentialName" Required="true" RequiredError="Required" />
            <MudTextField Label="Api Key" @bind-Value="apiKey" Required="true" RequiredError="Required" />
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="OnBackClicked">Back</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="OnSaveClicked">Save</MudButton>
        </MudCardActions>
    </MudCard>
</MudPaper>

@code {
    [Parameter, SupplyParameterFromQuery(Name = "from")]
    public string From { get; set; } = string.Empty;

    [Parameter, SupplyParameterFromQuery(Name = "to")]
    public string To { get; set; } = string.Empty;

    public string credentialName { get; set; } = string.Empty;
    public string apiKey { get; set; } = string.Empty;

    public void OnSaveClicked()
    {
        if (!string.IsNullOrEmpty(credentialName) && !string.IsNullOrEmpty(apiKey))
        {
            var model = new AzureModel()
                {
                    ApiKey = apiKey
                };
            var record = new CredentialRecord<AzureModel>(credentialName, model);
            CredentialService.CredentialsState.AzureCredentials.Add(record);
        }
    }

    public void OnBackClicked()
    {
        if (!string.IsNullOrEmpty(From))
        {
            Navigation.NavigateTo(From);
        }
        else
        {
            Navigation.NavigateTo("/settings");
        }
    }

    public void OnNextClicked()
    {
        if (!string.IsNullOrEmpty(To))
        {
            Navigation.NavigateTo(To);
        }
        else
        {
            Navigation.NavigateTo("/");
        }
    }
}
