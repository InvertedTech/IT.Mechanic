@page "/hosting/Rumble"
@using IT.Mechanic.App.Services.Profiles
@using IT.Mechanic.Models.Configuration.Hosting
@inject NavigationManager Navigation
@inject IProfileFactory ProfileFactory;

<MudPaper Width="75%" Class="ml-auto mr-auto">
    <MudCard Elevation="20">
        <MudCardHeader>
            <MudText Typo="Typo.h4">Set Rumble Host Settings</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudTextField Label="Server Sku" T="string" @bind-Value="ServerSKU" Required="true" RequiredError="Required" />
            <MudTextField Label="Server Location" T="string" @bind-Value="ServerLocation" Required="true" RequiredError="Required" />
        </MudCardContent>
        <MudCardActions>
            <MudButton Color="Color.Primary" @onclick="OnBackClicked">Back</MudButton>
            <MudButton Color="Color.Primary" @onclick="OnNextClicked">Next</MudButton>
        </MudCardActions>
    </MudCard>
</MudPaper>
@code {
    [Parameter, SupplyParameterFromQuery(Name = "from")]
    public string? From { get; set; }

    [Parameter, SupplyParameterFromQuery(Name = "redirect")]
    public string? To { get; set; }

    public string ServerSKU { get; set; } = string.Empty;
    public string ServerLocation { get; set; } = string.Empty;

    public void OnBackClicked()
    {
        if (!string.IsNullOrEmpty(From))
        {
            Navigation.NavigateTo(From);
        } else
        {
            Navigation.NavigateTo("/");
        }
    }

    public void OnNextClicked()
    {
        var model = new RumbleModel()
        {
            ServerSKU = ServerSKU,
            ServerLocation = ServerLocation,
        };

        ProfileFactory.Server.HostingDetails = model;

        if (!string.IsNullOrEmpty(To))
        {
            Navigation.NavigateTo(To);
        } else
        {
            Navigation.NavigateTo("/create/server-settings");
        }
    }
}
