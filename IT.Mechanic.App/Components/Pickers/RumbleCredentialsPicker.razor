@using IT.Mechanic.App.Services.Settings
@using IT.Mechanic.Models.Configuration.Credentials

<MudSelect T="RumbleModel" Value="@RumbleModelValue" ValueChanged="@RumbleModelValueChanged">
    @foreach (var credential in CredentialService.CredentialsState.RumbleCredentials)
    {
        <MudSelectItem Value="@credential.Credentials">@credential.CredentialName</MudSelectItem>
    }
</MudSelect>
<MudButton Color="Color.Info" Variant="Variant.Filled" @onclick="OnAddClicked">Add New</MudButton>

<MudMessageBox @ref="_messageBox">
    <MessageContent>
        <RumbleCredentialsForm Credentials="@CredentialService" />
    </MessageContent>
    <CancelButton>
        <MudButton Color="Color.Secondary" Variant="Variant.Outlined">Close</MudButton>
    </CancelButton>
</MudMessageBox>

@code {
    [Parameter]
    public ICredentialService CredentialService { get; set; }

    [Parameter]
    public RumbleModel RumbleModelValue { get; set; }

    [Parameter]
    public EventCallback<RumbleModel> RumbleModelValueChanged { get; set; }

    private MudMessageBox _messageBox;

    private async Task OnAddClicked()
    {
        await _messageBox.ShowAsync();
    }
}
